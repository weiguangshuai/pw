<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <import resource="classpath:Spring-mail.xml"/>
    <context:property-placeholder location="classpath:jdbc.properties"/>
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"
          p:driverClass="${driverClass}"
          p:jdbcUrl="${jdbcUrl}"
          p:user="${user}"
          p:password="${password}"
          p:acquireIncrement="10"
          p:initialPoolSize="10"
          p:maxIdleTime="40"
          p:maxPoolSize="40"
          p:minPoolSize="10"/>
    <!--mybatis的sqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dataSource"
          p:configLocation="classpath:sqlMapperConfig.xml"
          p:mapperLocations="classpath:mapper/*.xml"
          p:typeAliasesPackage="com.cqupt.project.entity"/>

    <!--采用自动扫描方式创建mapper bean-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cqupt.project"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="annotationClass" value="org.springframework.stereotype.Repository"/>
    </bean>

    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--注解事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:component-scan base-package="com.cqupt.project"/>

    <!--配置captcha验证码-->
    <bean id="captchaProducer" class="com.google.code.kaptcha.impl.DefaultKaptcha">
        <property name="config">
            <bean class="com.google.code.kaptcha.util.Config">
                <constructor-arg>
                    <props>
                        <prop key="kaptcha.border">no</prop>
                        <prop key="kaptcha.border.color">105,179,90</prop>
                        <prop key="kaptcha.textproducer.font.color">red</prop>
                        <prop key="kaptcha.image.width">250</prop>
                        <prop key="kaptcha.textproducer.font.size">90</prop>
                        <prop key="kaptcha.image.height">90</prop>
                        <prop key="kaptcha.session.key">code</prop>
                        <prop key="kaptcha.textproducer.char.length">4</prop>
                        <prop key="kaptcha.textproducer.font.names">宋体,楷体,微软雅黑</prop>
                    </props>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!--redis配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--JedisPool最大空闲连接数-->
        <property name="maxIdle" value="30"/>
        <!--JedisPool最小空闲连接数，即初始化连接数-->
        <property name="minIdle" value="10"/>
        <!--从JedisPool获取jedis实例时检查连接的有效性，默认是false-->
        <property name="testOnBorrow" value="false"/>
        <!--表示有一个idle object evitor线程对idle object进行扫描，如果validate失败，此object会被从pool中drop掉-->
        <property name="testWhileIdle" value="false"/>
        <!--将jedis实例归还连接池时检查连接的有效性，默认是false ；test开启太多会影响性能，都不开启异常连接可能会被使用，建议至少开启一个-->
        <property name="testOnReturn" value="true"/>
        <!--JedisPool最大连接数-->
        <property name="maxTotal" value="300"/>
        <!--从JedisPool获取连接等待毫秒数，超时则抛异常;若blockWhenExhausted为false，该配置项无效  -->
        <property name="maxWaitMillis" value="4000"/>
        <!--blockWhenExhausted   表示连接耗尽时是否阻塞, false报异常,ture阻塞maxWaitMillis直到超时 ;不配默认是true；建议配置为false  -->
        <property name="blockWhenExhausted" value="false"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="172.0.0.1"/>
        <constructor-arg name="port" value="6379"/>
    </bean>
</beans>